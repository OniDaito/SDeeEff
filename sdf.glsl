#version 300 es

precision mediump float;

// Blackle's cool shader
// https://www.shadertoy.com/view/wtVyWK


uniform float   u_time;
uniform vec2    u_resolution;

in vec2 out_texcoord;
layout(location = 0) out vec4 out_colour; // out_color must be written in order to see anything

vec3 erot(vec3 p, vec3 ax, float ro) {
    return mix(dot(p,ax)*ax,p,cos(ro))+sin(ro)*cross(ax,p);
}

float scene(vec3 p) {
    //sdf is undefined outside the unit sphere, uncomment to witness the abominations
    if (length(p) > 10.) {
        return length(p)-0.8;
    }
    //neural networks can be really compact... when they want to be
vec4 f0_0=sin(p.y*vec4(-1.453,-.117,-.309,-1.042)+p.z*vec4(.335,.239,-.046,1.747)+p.x*vec4(-1.519,.259,.033,-.282)+vec4(-1.079,-3.795,1.491,6.064));
vec4 f0_1=sin(p.y*vec4(2.949,-3.562,.186,5.141)+p.z*vec4(4.918,4.046,-.903,1.042)+p.x*vec4(2.209,2.853,.841,.344)+vec4(-.116,-.268,-.216,-.531));
vec4 f0_2=sin(p.y*vec4(-.686,1.742,-.162,.355)+p.z*vec4(-.436,-.247,.768,-1.717)+p.x*vec4(.404,1.459,-.545,-.997)+vec4(-.382,.700,.875,4.343));
vec4 f0_3=sin(p.y*vec4(.137,.457,-.173,.042)+p.z*vec4(-.166,-.034,-.215,-.206)+p.x*vec4(-.254,-.504,-.202,.201)+vec4(1.529,-.447,1.589,1.519));
vec4 f1_0=sin(mat4(-.230,.026,-.063,.192,.161,.325,.203,-.265,-1.502,-.136,.128,-.066,.138,-.008,-.016,-.997)*f0_0+
    mat4(.145,.496,-.021,-.114,-.033,.026,.007,.015,.154,.022,-.006,.250,.038,.026,.018,-.228)*f0_1+
    mat4(.150,-.076,-.056,-.200,-.132,.016,.019,.009,.441,-.071,.049,-.076,-.140,.013,-.013,.210)*f0_2+
    mat4(-1.877,-.313,-.065,.201,-.091,.125,.051,-.050,-1.738,-.237,.132,.055,-1.381,.237,.106,-.051)*f0_3+
    vec4(.175,-2.504,-1.694,-.052))/1.0+f0_0;
vec4 f1_1=sin(mat4(-.084,.020,.001,-.060,-.282,.258,-.518,.472,.025,.023,-.061,.969,.035,-.043,.081,-.200)*f0_0+
    mat4(.344,.083,-.186,.045,-.004,1.115,-.014,.002,-.082,-.019,.600,.179,.051,-.062,-.031,-.018)*f0_1+
    mat4(-.046,.057,-.174,-.310,.035,-.022,.077,-.088,.215,-.042,.046,.936,-.047,.019,.134,.013)*f0_2+
    mat4(.003,.054,.304,2.322,-.078,.053,.069,-.297,.062,-.140,.108,1.083,-.287,.316,.120,1.796)*f0_3+
    vec4(-1.994,-3.139,2.563,.633))/1.0+f0_1;
vec4 f1_2=sin(mat4(.336,-.211,-.176,.131,-.072,-.356,-.042,-.763,-.040,.157,-.334,-1.349,-.023,.082,-.029,-.174)*f0_0+
    mat4(.054,-.110,.384,-.041,-.056,.002,.004,-.006,.157,-.239,.163,.825,-.004,-.101,-.047,.014)*f0_1+
    mat4(-.422,.453,-.081,.624,.153,-.802,-.034,.001,.375,.072,.402,-.232,.085,-.067,-.001,.105)*f0_2+
    mat4(.026,.154,-.383,-1.098,.699,-.484,-.170,-.505,.120,.018,-.469,-1.194,-.002,.124,-.524,-1.358)*f0_3+
    vec4(-.016,-.004,-2.412,-2.404))/1.0+f0_2;
vec4 f1_3=sin(mat4(-.002,-.031,-.050,-.002,.209,.169,-.350,.232,.052,1.525,.057,-.221,-.074,-.065,-.033,.006)*f0_0+
    mat4(.007,.028,-.004,.020,.005,.020,.010,-.001,-.025,.149,.102,.005,-.017,-.053,.008,.000)*f0_1+
    mat4(-.038,-.102,.070,.035,.003,-.048,.019,-.012,-.045,-.140,.079,.236,.014,.137,.034,-.021)*f0_2+
    mat4(-.076,.904,.337,-.514,.038,.099,-.037,.032,-.006,1.866,.076,-.346,.023,2.124,.076,-.629)*f0_3+
    vec4(-1.597,3.090,-1.698,-1.596))/1.0+f0_3;
vec4 f2_0=sin(mat4(-.242,-.073,-.050,.023,.277,.274,.272,-.155,-.545,-.175,-.293,-.181,.033,.139,.081,-.287)*f1_0+
    mat4(.345,.219,.117,-.252,.255,.100,.019,.009,.191,-.396,-.153,.264,.001,.044,-.031,-.220)*f1_1+
    mat4(-.095,-.009,-.083,-.103,.638,-.176,.040,-.473,.029,.217,.130,-.028,.132,-.055,-.007,-.081)*f1_2+
    mat4(-.560,-.731,-.609,.677,.270,-.014,.139,-.373,-.482,-.071,-.488,.515,-.182,-.453,-.627,.301)*f1_3+
    vec4(-.249,-2.238,3.288,-.078))/1.4+f1_0;
vec4 f2_1=sin(mat4(-.054,-.330,-.002,.129,.119,.090,.493,-.050,-.316,.227,.013,.385,.147,.289,.113,.045)*f1_0+
    mat4(.441,.353,.552,.628,-.087,1.289,.002,-.755,-.058,-.201,-.662,-.454,.018,-.008,.044,.453)*f1_1+
    mat4(-.013,.387,-.068,-.505,-.001,-.226,-.066,.107,.320,.329,.007,.423,.016,-.099,.079,-.327)*f1_2+
    mat4(-.665,1.781,-.320,.653,.082,-.205,.112,-.057,-.377,-.451,-.292,.511,-.564,-.299,-.258,.458)*f1_3+
    vec4(3.252,-1.666,.977,-.153))/1.4+f1_1;
vec4 f2_2=sin(mat4(.185,-.361,.026,-.037,-1.202,1.754,-.216,.749,-.328,-.363,.072,-.437,-.192,-.533,.007,.621)*f1_0+
    mat4(-.545,.459,-.142,-.044,-.314,.798,.102,.830,.513,-.528,-.110,.232,-.098,-.137,-.054,.012)*f1_1+
    mat4(-.436,1.232,-.034,-.223,.552,-1.141,.041,.009,.236,-.872,-.051,-1.853,.111,-.008,-.061,-.595)*f1_2+
    mat4(-1.366,.311,.274,-.734,1.077,-1.280,-.009,-.154,-1.312,.734,.105,-.580,.520,-1.452,-.012,-1.100)*f1_3+
    vec4(2.221,-1.877,-1.287,-.598))/1.4+f1_2;
vec4 f2_3=sin(mat4(.123,-.009,.111,.012,-.192,-.165,-.624,-.067,1.223,-1.354,-.880,.014,-.012,-.174,-.164,.000)*f1_0+
    mat4(-.423,.100,-.471,.006,-.112,-.045,.011,-.035,.068,.917,-.065,.094,.048,-.052,-.021,-.019)*f1_1+
    mat4(.038,-.128,.083,-.084,.078,.333,-.031,.016,-.690,.718,-.403,-.048,.026,.090,.012,.004)*f1_2+
    mat4(1.459,-1.722,.574,.185,-.011,.559,-.217,.086,1.339,-.762,-.197,.021,.173,.261,1.266,.080)*f1_3+
    vec4(-2.649,1.542,.728,-1.385))/1.4+f1_3;
vec4 f3_0=sin(mat4(-.449,.014,-.128,-.701,-.324,-.254,-.235,.284,.010,-.605,1.105,1.039,1.004,-.381,-.344,.356)*f2_0+
    mat4(-.061,-.908,-.103,.589,-1.508,.114,.447,-.314,.353,.178,.168,-.405,.287,-.139,-.175,.178)*f2_1+
    mat4(-.199,.406,.059,.569,.114,-.194,-.056,-.052,.070,-1.274,.491,.552,-.026,.046,-.036,-.056)*f2_2+
    mat4(-.939,.186,1.520,.797,.078,-.326,-.058,-.490,-.048,.111,.969,.891,1.625,-.774,1.453,1.060)*f2_3+
    vec4(.821,.989,-.543,.075))/1.7+f2_0;
vec4 f3_1=sin(mat4(.027,.507,.015,.114,.113,-.755,-.481,.246,-.037,-1.414,-.306,.676,-.006,-.862,.537,.284)*f2_0+
    mat4(.114,-.702,-.061,.183,.137,.864,-.239,-.358,-.144,-.220,.201,-.356,-.011,-.527,.115,-.271)*f2_1+
    mat4(.023,-.120,-.206,.046,-.093,-.571,.367,-.063,.019,-.791,-.004,.779,.005,.401,-.108,.289)*f2_2+
    mat4(.009,-.638,-.176,.824,-.075,-.787,.368,.275,-.222,-1.908,.654,1.044,-.070,-.470,.099,.903)*f2_3+
    vec4(-1.524,-.569,1.534,.031))/1.7+f2_1;
vec4 f3_2=sin(mat4(-.172,-.399,-.224,.714,.720,-.033,-.029,-.048,.554,.063,-.933,-1.007,.417,.118,.062,-.376)*f2_0+
    mat4(-.061,-.300,-.081,-.771,.425,.482,-.004,1.223,-.493,-.657,-.030,-.208,-.004,-.026,.003,-.203)*f2_1+
    mat4(.887,1.230,.279,-.107,-.562,-.450,-.141,-.933,-1.023,-1.106,-.386,-1.649,-.054,.331,.016,1.064)*f2_2+
    mat4(.674,.018,-.816,.192,-.615,-.445,-.174,-.906,.209,-.636,-.673,-1.156,-.100,.303,-.824,-.809)*f2_3+
    vec4(-1.346,-.652,.061,-.196))/1.7+f2_2;
vec4 f3_3=sin(mat4(.524,-.261,.245,.089,-.612,.210,-.201,-.391,-1.979,-.781,-.591,-.471,-.321,.235,-.217,-.294)*f2_0+
    mat4(-.828,.348,-.294,-.244,-.440,.713,.217,-.061,.707,-1.113,.361,.171,-.061,.104,-.013,-.063)*f2_1+
    mat4(-.256,.635,-.038,-.122,.016,-.158,.040,-.029,-.653,-.419,-.376,-.053,.096,-.086,.090,-.012)*f2_2+
    mat4(-1.511,.571,-.249,-.051,-.098,.194,-.054,-.138,-1.345,.224,-.583,-.277,-1.262,-1.564,-.460,-.309)*f2_3+
    vec4(2.257,-.385,.795,2.166))/1.7+f2_3;
vec4 f4_0=sin(mat4(-.093,-.804,-.121,-.396,-.018,.915,-.446,.024,.473,.905,-.501,-.004,.506,.715,.216,-.011)*f3_0+
    mat4(.265,1.064,-.523,.260,.284,.802,-.137,.316,.116,-1.883,.343,-.444,.005,.221,-.021,.008)*f3_1+
    mat4(-.176,1.379,.269,-.170,-.015,-.759,-.105,-.017,.500,-.330,-.494,.026,.047,.103,-.038,-.327)*f3_2+
    mat4(1.256,1.180,-.388,-.064,-.191,-1.055,-.260,-.221,.591,-.393,-.060,-.673,-.866,.517,-.446,.355)*f3_3+
    vec4(.626,-2.555,.085,-.792))/2.0+f3_0;
vec4 f4_1=sin(mat4(-.195,.380,-.341,.111,.308,-.383,.815,.208,.834,-.084,-.121,.723,.587,-.148,.178,.154)*f3_0+
    mat4(.595,-.332,.944,.843,.043,.405,.369,.319,.043,-.275,-.728,-1.043,.112,-.083,.114,.078)*f3_1+
    mat4(-.120,-.282,.145,.028,.206,.106,-.075,.090,.664,-.527,.430,1.248,.098,.019,.006,-.071)*f3_2+
    mat4(.380,-1.103,-.398,-.408,.260,-.381,-.052,-.114,.649,.592,-.788,.408,1.045,.336,.321,1.778)*f3_3+
    vec4(.714,-.224,-1.230,-.599))/2.0+f3_1;
vec4 f4_2=sin(mat4(-.193,-.602,-.053,-.055,.323,-.311,-.669,.080,.065,-.247,-.519,-.087,-.125,.395,.133,-.044)*f3_0+
    mat4(.044,-.545,-.716,.191,-.291,.163,-.399,-.072,.310,.244,.487,.021,.090,.011,.027,.006)*f3_1+
    mat4(.107,-.064,.260,-.119,.092,.228,-.056,-.041,.116,-.540,-.258,-.082,-.153,-.739,-.093,.030)*f3_2+
    mat4(-.133,.274,-.007,.034,.755,-.311,-.059,.015,.546,-.095,.153,.076,-.036,-.849,-.502,-.111)*f3_3+
    vec4(-.354,.404,.162,-.159))/2.0+f3_2;
vec4 f4_3=sin(mat4(-.298,-.736,.301,-.093,.629,.414,-.248,.140,-.413,1.283,-1.505,.507,.362,.704,-1.587,.096)*f3_0+
    mat4(.872,1.034,-1.395,.136,.298,-.430,1.821,.145,-.774,-.107,-.152,.193,.110,1.533,-1.307,-.079)*f3_1+
    mat4(.282,-.697,1.348,-.082,-.241,1.863,-1.651,-.033,.330,1.536,-1.902,.162,.103,-1.482,.917,.116)*f3_2+
    mat4(.408,-.618,1.570,.246,.035,.250,-.937,.273,-.417,.953,-.958,.301,-.471,1.762,-1.967,.680)*f3_3+
    vec4(-.269,.269,-.762,1.808))/2.0+f3_3;
return dot(f4_0,vec4(.198,-.330,-.561,-.147))+
    dot(f4_1,vec4(-.592,-.076,.343,-.049))+
    dot(f4_2,vec4(-.059,.046,-.489,.001))+
    dot(f4_3,vec4(-.371,-.007,-.087,-.695))+
    0.603;
}

vec3 norm(vec3 p) {
    mat3 k = mat3(p, p, p) - mat3(0.001);
    return normalize(scene(p) - vec3(scene(k[0]),scene(k[1]),scene(k[2])));
}

float sdSphere(vec3 p, float r) {
  return length(p) - r;
}

float ray_march(vec3 ro, vec3 rd, float start, float end) {
  float depth = start;

  for (int i = 0; i < 255; i++) {
    vec3 p = ro + depth * rd;
    float d = sdSphere(p, 1.);
    depth += d;
    if (d < 0.001 || depth > end) break;
  }

  return depth;
}


void main( )
{
    vec2 uv = (gl_FragCoord.xy-.5*u_resolution.xy)/u_resolution.y;
    vec3 ro = vec3(0, 0, 10.0); // ray origin that represents camera position
    vec3 rd = normalize(vec3(uv, -1)); // ray direction
    
    float yrot = -0.5;
    float zrot = u_time*.2;
   
    //ro = erot(ro, vec3(0,1,0), yrot);
    //init = erot(init, vec3(0,1,0), yrot);
    //cam = erot(cam, vec3(0,0,1), zrot);
    //init = erot(init, vec3(0,0,1), zrot);
    
    vec3 p = ro;
    bool hit = false;

  

    for (int i = 0; i < 150 && !hit; i++) {
        float dist = scene(erot(p,vec3(0,1,0), zrot));
        hit = dist*dist < 1e-6;
        p+=dist*rd;
        if (distance(p,ro)>20.) break;
    }   

    vec3 n = norm(p);
    vec3 r = reflect(ro,n);
    //don't ask how I stumbled on this texture
    vec3 nz = p; // - erot(p, vec3(1), 2.) + erot(p, vec3(1), 4.);
    float spec = length(sin(r*0.35+sin(nz*120.)*.15)*.4+.6)/sqrt(3.);
    spec *= smoothstep(-.3,.2,scene(p+r*.2));
    vec3 col = vec3(.1,.1,.12)*spec + pow(spec,8.);
    float bgdot = length(sin(ro*8.)*.4+.6)/2.;
    vec3 bg = vec3(.1,.1,.11) * bgdot + pow(bgdot, 10.);
    out_colour.xyz = hit ? col : bg;
    out_colour = smoothstep(-.02,1.05,sqrt(out_colour)) * (1.- dot(uv,uv)*.5);
    out_colour.w = 1.0;
}